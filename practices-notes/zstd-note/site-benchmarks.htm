<html lang="en"><head><meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0">
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <!-- The above 3 meta tags *must* come first in the head; any other head content must come *after* these tags -->
    <title>Zstandard - Real-time data compression algorithm</title>

    <!-- Bootstrap -->
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.4/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css">

    <!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries -->
    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
    <!--[if lt IE 9]>
      <script src="https://oss.maxcdn.com/html5shiv/3.7.2/html5shiv.min.js"></script>
      <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
    <![endif]-->

    <link rel="stylesheet" href="js/bootstrap-patch.css">
    <style>
      .list-inline li a img {
        height: 50px;
      }

      /* Social Banner */
      .socialBanner {
        font-weight: bold;
        font-size: 20px;
        padding: 20px;
        max-width: 768px;
        margin: 0 auto;
        text-align: center;
      }
    </style>
  <link href="https://facebook.github.io/zstd/strapdown/v/0.2/themes/sandstone.min.css" rel="stylesheet"><link href="https://facebook.github.io/zstd/strapdown/v/0.2/strapdown.css" rel="stylesheet"><link href="https://facebook.github.io/zstd/strapdown/v/0.2/themes/bootstrap-responsive.min.css" rel="stylesheet"><style>translate.trans-result-loaded.trans-result-both{border: 1px dotted}</style><style>translate{display:none}translate.tr_res_loading.tr_res{display:inline-block}translate.trans-result-loaded:focus{border-color:rgba(0,0,0,0);outline:2px solid !important}translate.trans-result-loadedtr_res_src{display:none}translate.trans-result-loaded.trans-result-both{display:block}translate.trans-result-loaded.trans-result-both.trans-result-inline{display:inline-block;margin-left:6px}translate.trans-result-loaded.tr_res{display:inline-block}</style></head>

  <body style="padding-top: 0px; padding-bottom: 0px;">
    
    <nav class="navbar navbar-default">
      <div class="container-fluid">
        <!-- Brand and toggle get grouped for better mobile display -->
        <div class="navbar-header">
          <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#bs-example-navbar-collapse-1">
            <span class="sr-only">Toggle navigation</span>
            <span class="icon-bar"></span>
            <span class="icon-bar"></span>
            <span class="icon-bar"></span>
          </button>
          <a class="navbar-brand" href="/zstd/">Zstandard</a>
        </div>

        <!-- Collect the nav links, forms, and other content for toggling -->
        <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-1">
          <ul class="nav navbar-nav navbar-nav">
            <li><a href="#other-languages">Languages</a></li>
            <li class="dropdown">
              <a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-expanded="false">Index<span class="caret"></span></a>
              <ul class="dropdown-menu" role="menu">
                <li><a href="#benchmarks">Benchmarks</a></li>
                <li><a href="#GUI">GUI</a></li>
                <li><a href="#other-languages">Languages</a></li>
                <li><a href="#references">Reference usages</a></li>
                <li><a href="https://raw.githack.com/facebook/zstd/release/doc/zstd_manual.html">API documentation</a></li>
              </ul>
            </li>
          </ul>
          <ul class="nav navbar-nav navbar-right">
              <li><a href="https://github.com/facebook/zstd/releases/latest">Latest Release</a></li>
            <li><a href="https://github.com/facebook/zstd/issues">Issue Tracker</a></li>
            <li><a href="https://github.com/facebook/zstd"><i class="fa fa-lg fa-github"></i> GitHub</a></li>
          </ul>
        </div><!-- /.navbar-collapse -->
      </div><!-- /.container-fluid -->
    </nav>

    
    <div class="container">
      <div class="page-header jumbotron text-justify" style="padding-top:1em;padding-bottom:2em;">
        <!-- <h1><img src="images/zstd.png"/> Zstandard</h1> -->
        <h1><img src="images/zstd85.png"> Zstandard</h1>
        <iframe src="https://ghbtns.com/github-btn.html?user=facebook&amp;repo=zstd&amp;type=star&amp;count=true&amp;size=large&amp;v=2" frameborder="0" scrolling="0" width="160px" height="30px"></iframe>
        <p style="line-height: 1.5; font-weight: 400">
        Zstandard is a fast compression algorithm, providing high compression ratios.
        It also offers a special mode for small data, called <a href="#small-data">dictionary compression</a>.
        The reference library offers a very wide range of speed / compression trade-off,
        and is backed by an extremely fast decoder (see <a href="#benchmarks">benchmarks</a> below).
        Zstandard library is provided as open source software using a BSD license.
        Its format is stable and published as <a href="https://tools.ietf.org/html/rfc8878">IETF RFC 8878</a>.
      <translate class="trans-result-both trans-result-loaded" contenteditable="true">Zstandard 是一种快速压缩算法，提供高压缩比。它还为小数据提供了一种特殊模式，称为 <a href="#small-data">字典压缩</a> 。参考库提供了非常广泛的 速度/压缩 权衡，并由极快的解码器提供支持（请参阅下面的 <a href="#benchmarks">基准测试</a> ）。 Zstandard 库作为使用 BSD 许可证的开源软件提供。它的格式是稳定的，并作为 <a href="https://tools.ietf.org/html/rfc8878">IETF RFC 8878</a> 发布。</translate><!-- trans --></p></div>
    </div>


<div class="container" id="content">



<p><a name="benchmarks"></a></p>
<h2>Benchmarks<translate class="trans-result-both trans-result-loaded trans-result-inline" contenteditable="true">基准测试</translate><!-- trans --></h2>
<p>For reference, several fast compression algorithms were tested and compared
on a server running Arch Linux (<code class="prettyprint lang- prettyprinted" style=""><span class="typ">Linux</span><span class="pln"> version </span><span class="lit">5.5</span><span class="pun">.</span><span class="lit">11</span><span class="pun">-</span><span class="pln">arch1</span><span class="pun">-</span><span class="lit">1</span></code>),
with a Core i9-9900K CPU @ 5.0GHz,
using <a href="https://github.com/inikep/lzbench">lzbench</a>, an open-source in-memory benchmark by @inikep
compiled with <a href="https://gcc.gnu.org/">gcc</a> 9.3.0,
on the <a href="http://sun.aei.polsl.pl/~sdeor/index.php?page=silesia">Silesia compression corpus</a>.<translate class="trans-result-both trans-result-loaded" contenteditable="true">作为参考，在运行 Arch Linux (<code class="prettyprint lang- prettyprinted" style=""><span class="typ">Linux</span><span class="pln"> version </span><span class="lit">5.5</span><span class="pun">.</span><span class="lit">11</span><span class="pun">-</span><span class="pln">arch1</span><span class="pun">-</span><span class="lit">1</span></code>) 的服务器上测试并比较了几种快速压缩算法，由 @inikep 使用 Core i9-9900K CPU @ 5.0GHz 、&nbsp;<a href="https://github.com/inikep/lzbench">lzbench</a>&nbsp;以及以 <a href="https://gcc.gnu.org/">gcc</a> 9.3.0 编译的开源内存基准测试，在 <a href="http://sun.aei.polsl.pl/~sdeor/index.php?page=silesia">Silesia 压缩语料库</a> 上。</translate></p><!-- trans --><p></p>
<table class="table table-striped table-bordered">
<thead>
<tr>
<th>Compressor name</th>
<th>Ratio</th>
<th>Compression</th>
<th>Decompress.</th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>zstd 1.4.5 -1</strong></td>
<td>2.884</td>
<td>500 MB/s</td>
<td>1660 MB/s</td>
</tr>
<tr>
<td><a href="http://www.zlib.net/">zlib</a> 1.2.11 -1</td>
<td>2.743</td>
<td>90 MB/s</td>
<td>400 MB/s</td>
</tr>
<tr>
<td>brotli 1.0.7 -0</td>
<td>2.703</td>
<td>400 MB/s</td>
<td>450 MB/s</td>
</tr>
<tr>
<td><strong>zstd 1.4.5 --fast=1</strong></td>
<td>2.434</td>
<td>570 MB/s</td>
<td>2200 MB/s</td>
</tr>
<tr>
<td><strong>zstd 1.4.5 --fast=3</strong></td>
<td>2.312</td>
<td>640 MB/s</td>
<td>2300 MB/s</td>
</tr>
<tr>
<td>quicklz 1.5.0 -1</td>
<td>2.238</td>
<td>560 MB/s</td>
<td>710 MB/s</td>
</tr>
<tr>
<td><strong>zstd 1.4.5 --fast=5</strong></td>
<td>2.178</td>
<td>700 MB/s</td>
<td>2420 MB/s</td>
</tr>
<tr>
<td>lzo1x 2.10 -1</td>
<td>2.106</td>
<td>690 MB/s</td>
<td>820 MB/s</td>
</tr>
<tr>
<td><a href="http://www.lz4.org/">lz4</a> 1.9.2</td>
<td>2.101</td>
<td>740 MB/s</td>
<td>4530 MB/s</td>
</tr>
<tr>
<td>lzf 3.6 -1</td>
<td>2.077</td>
<td>410 MB/s</td>
<td>860 MB/s</td>
</tr>
<tr>
<td>snappy 1.1.8</td>
<td>2.073</td>
<td>560 MB/s</td>
<td>1790 MB/s</td>
</tr>
</tbody>
</table>
<p>The negative compression levels, specified with <code class="prettyprint lang- prettyprinted" style=""><span class="pun">--</span><span class="pln">fast</span><span class="pun">=#</span></code>,
offer faster compression and decompression speed in exchange for some loss in
compression ratio compared to level 1, as seen in the table above.<translate class="trans-result-both trans-result-loaded" contenteditable="true">负的压缩级别，用 <code class="prettyprint lang- prettyprinted" style=""><span class="pun">--</span><span class="pln">fast</span><span class="pun">=#</span></code> 指定，提供更快的压缩和解压速度，以换取与级别 1 相比在压缩率上的一些损失，如上表所示。</translate><!-- trans --></p>
<p>Zstd can trade compression speed for stronger compression ratios.
It is configurable by small increment.
Decompression speed is preserved and remain roughly the same at all settings,
a property shared by most LZ compression algorithms, such as <a href="http://www.zlib.net/">zlib</a> or lzma.<translate class="trans-result-both trans-result-loaded" contenteditable="true">Zstd 可以用压缩速度换取更强的压缩率。它可以通过小的增量进行配置。解压缩速度被保留下来，在所有设置下都保持大致相同，这是大多数LZ压缩算法，如 <a href="http://www.zlib.net/">zlib</a> 或 lzma 所共有的特性。</translate><!-- trans --></p>
<p>The following tests were run
on a server running Linux Debian (<code class="prettyprint lang- prettyprinted" style=""><span class="typ">Linux</span><span class="pln"> version </span><span class="lit">4.14</span><span class="pun">.</span><span class="lit">0</span><span class="pun">-</span><span class="lit">3</span><span class="pun">-</span><span class="pln">amd64</span></code>)
with a Core i7-6700K CPU @ 4.0GHz,
using <a href="https://github.com/inikep/lzbench">lzbench</a>, an open-source in-memory benchmark by @inikep
compiled with <a href="https://gcc.gnu.org/">gcc</a> 7.3.0,
on the <a href="http://sun.aei.polsl.pl/~sdeor/index.php?page=silesia">Silesia compression corpus</a>.<translate class="trans-result-both trans-result-loaded" contenteditable="true">下面的测试是在一台运行 Linux Debian (<code class="prettyprint lang- prettyprinted" style=""><span class="typ">Linux</span><span class="pln"> version </span><span class="lit">4.14</span><span class="pun">.</span><span class="lit">0</span><span class="pun">-</span><span class="lit">3</span><span class="pun">-</span><span class="pln">amd64</span></code>) 的服务器上进行的， CPU 为 Core i7-6700K @ 4.0GHz ， 使用 <a href="https://github.com/inikep/lzbench">lzbench</a> ，一个由 @inikep 用 <a href="https://gcc.gnu.org/">gcc</a> 7.3.0 编译的开源内存基准，在 <a href="http://sun.aei.polsl.pl/~sdeor/index.php?page=silesia">Silesia 压缩语料库</a> 上。</translate><!-- trans --></p>
<table class="table table-striped table-bordered">
<thead>
<tr>
<th>Compression Speed vs Ratio<translate class="trans-result-both trans-result-loaded" contenteditable="true">压缩速度与比值</translate><!-- trans --></th>
<th>Decompression Speed<translate class="trans-result-both trans-result-loaded" contenteditable="true">解压缩速度</translate><!-- trans --></th>
</tr>
</thead>
<tbody>
<tr>
<td><img src="https://raw.githubusercontent.com/facebook/zstd/v1.3.4/doc/images/CSpeed2.png" alt="Compression Speed vs Ratio" style="height:500px;"></td>
<td><img src="https://raw.githubusercontent.com/facebook/zstd/v1.3.4/doc/images/DSpeed3.png" alt="Decompression Speed" style="height:500px;"></td>
</tr>
</tbody>
</table>
<p>Several algorithms can produce higher compression ratio but at slower speed, falling outside of the graph.
For a larger picture including very slow modes, <a href="https://raw.githubusercontent.com/facebook/zstd/master/doc/images/DCspeed5.png">click on this link</a> .<translate class="trans-result-both trans-result-loaded" contenteditable="true">有几种算法可以产生较高的压缩率，但速度较慢，属于图中的范围。对于包括非常慢的模式在内的更大的图片，请 <a href="https://raw.githubusercontent.com/facebook/zstd/master/doc/images/DCspeed5.png">点此链接</a> 。</translate><!-- trans --></p>
<p><a name="small-data"></a></p>
<h3>The case for Small Data compression<translate class="trans-result-both trans-result-loaded trans-result-inline" contenteditable="true">小数据压缩的情况</translate><!-- trans --></h3>
<p>Previous charts provide results applicable to typical file and stream scenarios (several MB). Small data comes with different perspectives.<translate class="trans-result-both trans-result-loaded" contenteditable="true">前面的图表提供了适用于典型文件和流场景的结果 (几兆字节) 。小数据会情况不同。</translate><!-- trans --></p>
<p>The smaller the amount of data to compress, the more difficult it is to compress. This problem is common to all compression algorithms, and reason is, compression algorithms learn from past data how to compress future data. But at the beginning of a new data set, there is no "past" to build upon.<translate class="trans-result-both trans-result-loaded" contenteditable="true">要压缩的数据量越小，压缩的难度就越大。这个问题是所有压缩算法的共同问题，原因是，压缩算法从过去的数据中学习如何压缩未来的数据。但是，在一个新的数据集的开始，没有 "过去" 可以借鉴。</translate><!-- trans --></p>
<p>To solve this situation, Zstd offers a <strong>training mode</strong>, which can be used to tune the algorithm for a selected type of data.
Training Zstandard is achieved by provide it with a few samples (one file per sample). The result of this training is stored in a file called "dictionary", which must be loaded before compression and decompression.
Using this dictionary, the compression ratio achievable on small data improves dramatically.<translate class="trans-result-both trans-result-loaded" contenteditable="true">为了解决这种情况， Zstd 提供了一个 <strong>训练模式</strong> ，它可以用来为选定的数据类型调整算法。训练 Zstandard 是通过向它提供一些样本 (每个样本一个文件) 来实现的。训练的结果存储在一个叫做 "字典" 的文件中，在压缩和解压之前必须加载这个文件。使用这个字典，在小数据上可实现的压缩率会有很大的提高。</translate><!-- trans --></p>
<p>The following example uses the <code class="prettyprint lang- prettyprinted" style=""><span class="pln">github</span><span class="pun">-</span><span class="pln">users</span></code> <a href="https://github.com/facebook/zstd/releases/tag/v1.1.3">sample set</a>, created from <a href="https://developer.github.com/v3/users/#get-all-users">github public API</a>.
It consists of roughly 10K records weighting about 1KB each.<translate class="trans-result-both trans-result-loaded" contenteditable="true">下面的例子使用了 <code class="prettyprint lang- prettyprinted" style=""><span class="pln">github</span><span class="pun">-</span><span class="pln">users</span></code> <a href="https://github.com/facebook/zstd/releases/tag/v1.1.3">样本集</a> ，它是由 <a href="https://developer.github.com/v3/users/#get-all-users">github 公共 API</a> 创建的。它由大约 10K 条记录组成，每条记录的重量约为 1KB 。</translate><!-- trans --></p>
<table class="table table-striped table-bordered">
<thead>
<tr>
<th>Compression Ratio<translate class="trans-result-both trans-result-loaded" contenteditable="true">压缩率</translate><!-- trans --></th>
<th>Compression Speed<translate class="trans-result-both trans-result-loaded" contenteditable="true">压缩速度</translate><!-- trans --></th>
<th>Decompression Speed<translate class="trans-result-both trans-result-loaded" contenteditable="true">解压缩速度</translate><!-- trans --></th>
</tr>
</thead>
<tbody>
<tr>
<td><img src="https://raw.githubusercontent.com/facebook/zstd/master/doc/images/dict-cr.png" alt="Compression Ratio" title="Compression Ratio"></td>
<td><img src="https://raw.githubusercontent.com/facebook/zstd/master/doc/images/dict-cs.png" alt="Compression Speed" title="Compression Speed"></td>
<td><img src="https://raw.githubusercontent.com/facebook/zstd/master/doc/images/dict-ds.png" alt="Decompression Speed" title="Decompression Speed"></td>
</tr>
</tbody>
</table>
<p>These compression gains are achieved while simultaneously providing <em>faster</em> compression and decompression speeds.<translate class="trans-result-both trans-result-loaded" contenteditable="true">这些压缩收益是在同时提供 <em>更快的</em> 压缩和解压速度的情况下实现的。</translate><!-- trans --></p>
<p>Training works if there is some correlation in a family of small data samples. The more data-specific a dictionary is, the more efficient it is (there is no <em>universal dictionary</em>).
Hence, deploying one dictionary per type of data will provide the greatest benefits.
Dictionary gains are mostly effective in the first few KB. Then, the compression algorithm will gradually use previously decoded content to better compress the rest of the file.<translate class="trans-result-both trans-result-loaded" contenteditable="true">如果在一个小数据样本系列中存在一些相关性，训练就会起作用。词典的数据特性越强，它的效率就越高 (没有 <em>通用的词典</em> ) 。因此，为每一种类型的数据部署一部字典将提供最大的好处。词典的收益在最初的几个 KB 中大多是有效的。然后，压缩算法将逐渐使用先前解码的内容来更好地压缩文件的其余部分。</translate><!-- trans --></p>
<h3>A rich API set :<translate class="trans-result-both trans-result-loaded trans-result-inline" contenteditable="true">丰富的 API 集：</translate><!-- trans --></h3>
<p>Zstandard API is designed with learning curve in mind.
At the top, you'll find simple methods, using trivial arguments and behavior.
Then, at each new paragraph, the API introduces new concepts and parameters,
giving gradually more control for advanced usages.<translate class="trans-result-both trans-result-loaded" contenteditable="true">Zstandard API 的设计考虑到了学习曲线。在最顶部，你会发现简单的方法，使用微不足道的参数和行为。然后，在每一个新的段落中， API 都会引入新的概念和参数，逐渐为高级用法提供更多的控制。</translate><!-- trans --></p>
<p>You can learn more about Zstandard API by reading <a href="https://raw.githack.com/facebook/zstd/release/doc/zstd_manual.html">its documentation</a>.<translate class="trans-result-both trans-result-loaded" contenteditable="true">你可以通过阅读 Zstandard API <a href="https://raw.githack.com/facebook/zstd/release/doc/zstd_manual.html">的文档</a> 来了解更多的信息。</translate><!-- trans --></p>
<p><br>
<a name="other-languages"></a></p>
<h2>Multiple programming languages<translate class="trans-result-both trans-result-loaded trans-result-inline" contenteditable="true">多编程语言</translate><!-- trans --></h2>
<p>Should you need Zstandard in different language than <a href="https://github.com/facebook/zstd">reference C</a>,
here is a list of known bindings and ports provided by great authors.
All versions support the Zstandard <a href="https://github.com/facebook/zstd/blob/master/doc/zstd_compression_format.md">format specification</a>
and are therefore interoperable.
Many versions listed below are bindings to the <a href="https://github.com/facebook/zstd">reference C</a> library.
There are also full re-implementation of the algorithm in the target language
which are explicitly labelled as Ports.<translate class="trans-result-both trans-result-loaded" contenteditable="true">如果你需要 Zstandard 的不同语言，而不是 <a href="https://github.com/facebook/zstd">参考 C 语言</a> ，这里有一列表的已知的由伟大的作者们提供的&nbsp;bindings 或者 ports 。所有的版本都支持 Zstandard 的 <a href="https://github.com/facebook/zstd/blob/master/doc/zstd_compression_format.md">格式规范</a> ，因此是可以互用的。下面列出的许多版本是与 <a href="https://github.com/facebook/zstd">参考 C 语言</a> 库的绑定。还有一些在目标语言中重新实现的算法，被明确地标为 Ports 。</translate><!-- trans --></p>
<table class="table table-striped table-bordered">
<thead>
<tr>
<th>Language</th>
<th>Author</th>
<th>URL</th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>Java</strong></td>
<td>Luben Karavelov</td>
<td><a href="https://github.com/luben/zstd-jni">https://github.com/luben/zstd-jni</a></td>
</tr>
<tr>
<td><strong>Java</strong> (Port)</td>
<td>Martin Traverso</td>
<td><a href="https://github.com/airlift/aircompressor/tree/master/src/main/java/io/airlift/compress/zstd">https://github.com/airlift/aircompressor/tree/master/src/main/java/io/airlift/compress/zstd</a></td>
</tr>
<tr>
<td><strong>Python</strong> (full)</td>
<td>Gregory Szorc</td>
<td><a href="https://pypi.python.org/pypi/zstandard">https://pypi.python.org/pypi/zstandard</a></td>
</tr>
<tr>
<td><strong>Python</strong> (simple)</td>
<td>Sergey Dryabzhinsky</td>
<td><a href="https://github.com/sergey-dryabzhinsky/python-zstd">https://github.com/sergey-dryabzhinsky/python-zstd</a></td>
</tr>
<tr>
<td><strong>Python</strong> (bz2 api)</td>
<td>Ma Lin</td>
<td><a href="https://pypi.org/project/pyzstd">https://pypi.org/project/pyzstd</a></td>
</tr>
<tr>
<td><strong>Rust</strong></td>
<td>Alexandre Bury</td>
<td><a href="https://crates.io/crates/zstd">https://crates.io/crates/zstd</a></td>
</tr>
<tr>
<td><strong>Rust</strong> (decoder, Port)</td>
<td>Moritz Borcherding</td>
<td><a href="https://github.com/KillingSpark/zstd-rs">https://github.com/KillingSpark/zstd-rs</a></td>
</tr>
<tr>
<td><strong>C#</strong></td>
<td>SKB Kontur</td>
<td><a href="https://github.com/skbkontur/ZstdNet">https://github.com/skbkontur/ZstdNet</a></td>
</tr>
<tr>
<td><strong>C#</strong> (streaming)</td>
<td>Bernhard Pichler</td>
<td><a href="https://github.com/bp74/Zstandard.Net">https://github.com/bp74/Zstandard.Net</a></td>
</tr>
<tr>
<td><strong>C#</strong> (signed)</td>
<td>Tyler Young</td>
<td><a href="https://github.com/ImpromptuNinjas/ZStd">https://github.com/ImpromptuNinjas/ZStd</a></td>
</tr>
<tr>
<td><strong>C#</strong> (Port)</td>
<td>Oleg Stepanischev</td>
<td><a href="https://github.com/oleg-st/ZstdSharp">https://github.com/oleg-st/ZstdSharp</a></td>
</tr>
<tr>
<td><strong>Javascript</strong> (emscripten)</td>
<td>Yoshihito</td>
<td><a href="https://www.npmjs.com/package/zstd-codec">https://www.npmjs.com/package/zstd-codec</a></td>
</tr>
<tr>
<td><strong>Javascript</strong> (decoder,  Port)</td>
<td>Arjun Barrett</td>
<td><a href="https://www.npmjs.com/package/fzstd">https://www.npmjs.com/package/fzstd</a></td>
</tr>
<tr>
<td><strong>Javascript</strong> (decoder, wasm)</td>
<td>Don McCurdy</td>
<td><a href="https://www.npmjs.com/package/zstddec">https://www.npmjs.com/package/zstddec</a></td>
</tr>
<tr>
<td><strong>Node.js</strong></td>
<td>Tyler Stiene</td>
<td><a href="https://www.npmjs.com/package/simple-zstd">https://www.npmjs.com/package/simple-zstd</a></td>
</tr>
<tr>
<td><strong>PHP</strong></td>
<td>Kamijo</td>
<td><a href="https://github.com/kjdev/php-ext-zstd">https://github.com/kjdev/php-ext-zstd</a></td>
</tr>
<tr>
<td><strong>R</strong></td>
<td>Konstantin Sorokin</td>
<td><a href="https://cran.r-project.org/web/packages/zstdr/index.html">https://cran.r-project.org/web/packages/zstdr/index.html</a></td>
</tr>
<tr>
<td><strong>Go</strong> (Port)</td>
<td>Klaus Post</td>
<td><a href="https://github.com/klauspost/compress/tree/master/zstd#zstd">https://github.com/klauspost/compress/tree/master/zstd#zstd</a></td>
</tr>
<tr>
<td><strong>Go</strong></td>
<td>Vianney Tran</td>
<td><a href="https://github.com/DataDog/zstd">https://github.com/DataDog/zstd</a></td>
</tr>
<tr>
<td><strong>Go</strong> (+dict)</td>
<td>Aliaksandr Valialkin</td>
<td><a href="https://github.com/valyala/gozstd">https://github.com/valyala/gozstd</a></td>
</tr>
<tr>
<td><strong>Swift</strong></td>
<td>Anatoli Peredera</td>
<td><a href="https://github.com/omniprog/SwiftZSTD">https://github.com/omniprog/SwiftZSTD</a></td>
</tr>
<tr>
<td><strong>Ruby</strong></td>
<td>SpringMT</td>
<td><a href="https://github.com/SpringMT/zstd-ruby">https://github.com/SpringMT/zstd-ruby</a></td>
</tr>
<tr>
<td><strong>Ruby</strong> (FFI)</td>
<td>Michael Sievers</td>
<td><a href="https://github.com/msievers/zstandard-ruby">https://github.com/msievers/zstandard-ruby</a></td>
</tr>
<tr>
<td><strong>Ruby</strong> (stream)</td>
<td>Andrew Aladjev</td>
<td><a href="https://rubygems.org/gems/ruby-zstds">https://rubygems.org/gems/ruby-zstds</a></td>
</tr>
<tr>
<td><strong>Perl</strong></td>
<td>Jiro Nishiguchi</td>
<td><a href="https://metacpan.org/release/Compress-Zstd">https://metacpan.org/release/Compress-Zstd</a></td>
</tr>
<tr>
<td><strong>Pascal</strong></td>
<td>Denis Anisimov</td>
<td><a href="https://github.com/DenisAnisimov/ZSTD.pas">https://github.com/DenisAnisimov/ZSTD.pas</a></td>
</tr>
<tr>
<td><strong>Visual Basic 6</strong></td>
<td>Tanner Helland</td>
<td><a href="https://github.com/tannerhelland/VB6-Compression">https://github.com/tannerhelland/VB6-Compression</a></td>
</tr>
<tr>
<td><strong>Objective C</strong></td>
<td>Micha Mazaheri</td>
<td><a href="https://github.com/luckymarmot/ZstdKit">https://github.com/luckymarmot/ZstdKit</a></td>
</tr>
<tr>
<td><strong>Lisp</strong></td>
<td>Guillaume Le Vaillant</td>
<td><a href="https://github.com/glv2/cl-zstd">https://github.com/glv2/cl-zstd</a></td>
</tr>
<tr>
<td><strong>Ada</strong></td>
<td>John Marino</td>
<td><a href="https://github.com/jrmarino/zstd-ada">https://github.com/jrmarino/zstd-ada</a></td>
</tr>
<tr>
<td><strong>Dart</strong></td>
<td>Instantiations</td>
<td><a href="https://pub.dev/documentation/es_compression/latest/zstd/zstd-library.html">https://pub.dev/documentation/es_compression/latest/zstd/zstd-library.html</a></td>
</tr>
<tr>
<td><strong>Scala</strong> (Port, decoder)</td>
<td>Johannes Rudolph</td>
<td><a href="https://github.com/jrudolph/decoders/blob/main/src/main/scala/net/virtualvoid/codecs/zstd/Zstd.scala">https://github.com/jrudolph/decoders/blob/main/src/main/scala/net/virtualvoid/codecs/zstd/Zstd.scala</a></td>
</tr>
<tr>
<td><strong>Julia</strong></td>
<td>Kenta Sato</td>
<td><a href="https://github.com/bicycle1885/CodecZstd.jl">https://github.com/bicycle1885/CodecZstd.jl</a></td>
</tr>
<tr>
<td><strong>D</strong></td>
<td>Masahiro Nakagawa</td>
<td><a href="https://code.dlang.org/packages/zstd">https://code.dlang.org/packages/zstd</a></td>
</tr>
<tr>
<td><strong>Lua</strong></td>
<td>Soojin Nam</td>
<td><a href="https://github.com/sjnam/lua-resty-zstd">https://github.com/sjnam/lua-resty-zstd</a></td>
</tr>
<tr>
<td><strong>Haskell</strong></td>
<td>Bryan O'Sullivan</td>
<td><a href="https://github.com/facebookexperimental/hs-zstd">https://github.com/facebookexperimental/hs-zstd</a></td>
</tr>
<tr>
<td><strong>Erlang</strong></td>
<td>Yuki Ito</td>
<td><a href="https://hex.pm/packages/zstd">https://hex.pm/packages/zstd</a></td>
</tr>
<tr>
<td><strong>Tcl</strong></td>
<td>D. Bohdan</td>
<td><a href="https://wiki.tcl-lang.org/48788">https://wiki.tcl-lang.org/48788</a></td>
</tr>
<tr>
<td><strong>SmallTalk</strong></td>
<td>Instantiations</td>
<td><a href="http://www.instantiations.com/resources/goodies.html#instantiations">http://www.instantiations.com/resources/goodies.html#instantiations</a></td>
</tr>
<tr>
<td><strong>Elixir</strong></td>
<td>chenzhuoyu</td>
<td><a href="https://hex.pm/packages/ex_zstd">https://hex.pm/packages/ex_zstd</a></td>
</tr>
<tr>
<td><strong>OCaml</strong></td>
<td>Jane Street</td>
<td><a href="https://opam.ocaml.org/packages/zstandard/">https://opam.ocaml.org/packages/zstandard/</a></td>
</tr>
<tr>
<td><strong>Crystal</strong></td>
<td>@didactic-drunk</td>
<td><a href="https://github.com/didactic-drunk/zstd.cr">https://github.com/didactic-drunk/zstd.cr</a></td>
</tr>
<tr>
<td><strong>Nim</strong></td>
<td>wltsmrz</td>
<td><a href="https://github.com/wltsmrz/nim_zstd">https://github.com/wltsmrz/nim_zstd</a></td>
</tr>
<tr>
<td><strong>Racket</strong></td>
<td>Vincent Lee</td>
<td><a href="https://pkgs.racket-lang.org/package/zstd">https://pkgs.racket-lang.org/package/zstd</a></td>
</tr>
</tbody>
</table>
<p><br>
<a name="GUI"></a></p>
<h2>Graphical User Interfaces<translate class="trans-result-both trans-result-loaded trans-result-inline" contenteditable="true">图形化用户界面</translate><!-- trans --></h2>
<p>Tino Reichardt has created a version of <a href="https://mcmilk.de/projects/7-Zip-ZStd/">7-zip archive manager with Zstandard</a>.</p>
<p>Denis Anisimov, of TC4shell fame, also developed a <a href="http://www.tc4shell.com/en/7zip/modern7z/">7-zip plugin with Zstandard support</a>.</p>
<p>Peazip is a free multi-platforms archiver by Giorgio Tani with <a href="https://peazip.github.io/zst-compressed-file-format.html">support for Zstandard</a></p>
<p><a href="https://www.rarlab.com/download.htm">WinRAR</a> supports decoding of Zstandard files (as well as zip files using Zstandard encoder)</p>
<p><img src="images/7-Zip_02.png" alt="7-zip with Zstandard" style="height:400px;"></p>
<p><br>
<a name="references"></a></p>
<h2>Zstandard is used by :</h2>
<h4>Featured</h4>
<div class="container">
  <ul class="list-inline">
    <li><a href="https://www.kernel.org/"><img src="images/linux.png"></a> <a href="https://www.phoronix.com/scan.php?page=article&amp;item=linux-414-features">Linux</a> </li>
    <li><a href="https://www.freebsd.org/"><img src="images/freebsd.png"></a> <a href="https://svnweb.freebsd.org/changeset/base/329240">FreeBSD</a></li>
    <li><a href="https://aws.amazon.com/redshift/"><img src="images/aws.png"></a> <a href="https://aws.amazon.com/about-aws/whats-new/2017/01/amazon-redshift-now-supports-the-zstandard-high-data-compression-encoding-and-two-new-aggregate-functions/">Redshift</a> </li>
    <li><a href="https://www.github.com/"><img src="images/github.png"></a> <a href="https://github.com/actions/cache/pull/270">Github Actions</a></li>
    <li><a href="https://www.mercurial-scm.org/"><img src="images/mercurial.png"></a> <a href="https://www.mercurial-scm.org/wiki/Release4.1">Mercurial</a></li>
  </ul>
</div>

<h4>Databases</h4>
<div class="container">
  <ul class="list-inline">
    <li><a href="https://rocksdb.org/"><img src="images/rocksdb.png"></a> <a href="https://twitter.com/rocksdb/status/771387757306388480">RocksDB</a> </li>
    <li><a href="https://hadoop.apache.org/"><img src="images/hadoop.png"></a> <a href="https://issues.apache.org/jira/browse/HADOOP-13578">Hadoop</a> </li>
    <li><a href="https://www.mysql.com/"><img src="images/mysql.png"></a> <a href="https://dev.mysql.com/doc/relnotes/mysql/8.0/en/news-8-0-18.html#mysqld-8-0-18-connection-control">MySQL</a> </li>
    <li><a href="https://cassandra.apache.org/"><img src="images/cassandra.png"></a> <a href="https://issues.apache.org/jira/browse/CASSANDRA-14482">Cassandra</a> </li>
    <li><a href="https://www.mongodb.com/"><img src="images/mongo.png"></a> <a href="http://mongodb.github.io/mongo-java-driver/3.12/driver-async/tutorials/compression/">MongoDB</a> </li>
    <li><a href="http://www.wiredtiger.com/"><img src="images/wt.png"></a> <a href="https://github.com/wiredtiger/wiredtiger/tree/master/ext/compressors/zstd">WiredTiger</a> </li>
    <li><a href="https://redis.io/"><img src="images/redis.png"></a> <a href="https://github.com/chadnickbok/redis-zstd-module">Redis</a> </li>
    <li><a href="http://prestodb.github.io/"><img src="images/presto.png"></a> <a href="https://prestosql.io/docs/current/release/release-314.html">Presto</a> </li>
    <li><a href="https://clickhouse.tech/"><img src="images/clickhouse.png"></a> <a href="https://clickhouse.tech/docs/en/operations/server-configuration-parameters/settings/#server-settings-compression">ClickHouse</a> </li>
    <li><a href="https://groonga.org/"><img src="images/groonga.png"></a> <a href="http://groonga.org/en/blog/2016/11/29/groonga-6.1.1.html">Groonga</a> </li>
    <li><a href="https://tarantool.org/"><img src="images/tarantool.png"></a> <a href="https://github.com/tarantool/tarantool/blob/master/cmake/BuildZSTD.cmake">Tarantool</a> </li>
    <li><a href="https://github.com/XeLabs/tokudb"><img src="images/tokudb.png"></a> <a href="https://github.com/XeLabs/tokudb/commit/7ba55b2ee6aaac0980daa0a6b269a5c551da4ba6">TokuDB</a> </li>
    <li><a href="https://hbase.apache.org/"><img src="images/hbase.png"></a> <a href="https://issues.apache.org/jira/browse/HBASE-16710">HBase</a> </li>
    <li><a href="https://www.postgresql.org/"><img src="images/postgresql.png"></a> <a href="https://github.com/grahamedgecombe/pgzstd">PostgreSQL</a> </li>
    <li><a href="https://github.com/VictoriaMetrics/VictoriaMetrics/"><img src="images/victoriametrics.png"></a> <a href="https://medium.com/faun/victoriametrics-achieving-better-compression-for-time-series-data-than-gorilla-317bc1f95932">VictoriaMetrics</a> </li>
    <li><a href="https://www.scylladb.com/"><img src="images/scylla.png"></a> <a href="https://www.scylladb.com/2019/10/04/compression-in-scylla-part-one/">Scylla</a> </li>
    <li><a href="https://www.vertica.com/"><img src="images/vertica.png"></a> <a href="https://www.vertica.com/docs/9.3.x/HTML/Content/Authoring/SQLReferenceManual/Statements/encoding-type.htm?zoom_highlight=zstandard#Zstandar">Vertica</a> </li>
    <li><a href="https://impala.apache.org/"><img src="images/impala.png"></a> <a href="https://impala.apache.org/docs/build/html/topics/impala_new_features.html">Impala</a> </li>
  </ul>
</div>

<h4>File systems &amp; storage</h4>
<div class="container">
  <ul class="list-inline">
    <li><a href="https://btrfs.wiki.kernel.org/index.php/Main_Page"><img src="images/btrfs.png"></a> <a href="https://btrfs.wiki.kernel.org/index.php/Compression">BtrFS</a> </li>
    <li><a href="http://open-zfs.org/wiki/Main_Page"><img src="images/openzfs.png"></a> <a href="https://github.com/openzfs/zfs/commit/10b3c7f5e424f54b3ba82dbf1600d866e64ec0a0">OpenZFS</a> </li>
    <li><a href="https://en.wikipedia.org/wiki/SquashFS"><img src="images/squashfs.png"></a> <a href="https://www.phoronix.com/scan.php?page=news_item&amp;px=Linux-4.14-Zstd-Pull">SquashFS</a> </li>
    <li><a href="https://f2fs.wiki.kernel.org/start"><img src="images/f2fs.png"></a> <a href="https://www.phoronix.com/scan.php?page=news_item&amp;px=F2FS-Zstd-Linux-5.7-Pull">F2FS</a> </li>
    <li><a href="https://en.wikipedia.org/wiki/ReiserFS"><img src="images/reiserfs.png"></a> <a href="https://metztli.it/blog/index.php/building-new-reiser4-software-format?blog=4">ReiserFS</a> </li>
    <li><a href="https://www.truenas.com//"><img src="images/truenas.png"></a> <a href="https://github.com/freenas/freenas/pull/5517">TrueNAS</a></li>
  </ul>
</div>

<h4>Web</h4>
<div class="container">
  <ul class="list-inline">
    <li><a href="https://caddyserver.com/"><img src="images/caddy.png"></a> <a href="https://twitter.com/mholt6/status/1137176475784732673">caddy</a> </li>
    <li><a href="https://github.com/facebook/hhvm"><img src="images/hhvm.png"></a> <a href="https://github.com/facebook/hhvm/commit/d830ac5b335cea8433abcda14a044d71da3bd0dc">HHVM</a> </li>
    <li><a href="https://github.com/tokers/zstd-nginx-module"><img src="images/nginx.png"></a> <a href="https://github.com/tokers/zstd-nginx-module">nginx (module)</a> </li>
    <li><a href="https://curl.haxx.se/"><img src="images/curl.png"></a> <a href="https://github.com/curl/curl/pull/5453">curl</a> </li>
    <li><a href="https://gitlab.com/gnuwget/wget2"><img src="images/wget2.png"></a> <a href="https://twitter.com/ruehsen/status/1050701663995129862">wget2</a> </li>
    <li><a href="https://www.djangoproject.com/"><img src="images/django.png"></a> <a href="https://pypi.org/project/django-compression-middleware/">django</a> </li>
    <li><a href="https://httptoolkit.tech/"><img src="images/htoolkit.png"></a> <a href="https://twitter.com/HttpToolkit/status/1396911225108418564">HTTP Toolkit</a> </li>
  </ul>
</div>

<h4>Archives</h4>
<div class="container">
  <ul class="list-inline">
    <li><a href="https://www.winzip.com/"><img src="images/winzip.png"></a> <a href="http://kb.winzip.com/kb/entry/313/">winzip</a> </li>
    <li><a href="https://www.winrar.com/"><img src="images/winrar.png"></a> <a href="https://www.rarlab.com/rarnew.htm">winrar</a> </li>
    <li><a href="http://www.powerarchiver.com/"><img src="images/powerarc.png"></a> <a href="https://www.powerarchiver.com/2020/04/08/powerarchiver-2021-preview-build-32-is-out-today/">PowerAchiver</a> </li>
    <li><a href="https://fogproject.org/"><img src="images/fog.png"></a> <a href="https://news.fogproject.org/fog-1-3-5-rc-9/">Fog</a> </li>
    <li><a href="https://borgbackup.readthedocs.io/en/stable/"><img src="images/borg50.png"></a> <a href="https://github.com/borgbackup/borg/issues/1633#issuecomment-307556500">Backup</a> </li>
    <li><a href="http://www.libarchive.org/"><img src="images/libarchive.png"></a> <a href="https://github.com/libarchive/libarchive/pull/905">libarchive</a> </li>
    <li><a href="https://www.gnu.org/software/tar/"><img src="images/gnu.png"></a> <a href="https://www.phoronix.com/scan.php?page=news_item&amp;px=Tar-Zstd-Compression">tar</a> </li>
    <li><a href="https://www.smartversion.com/smartversion.htm"><img src="images/smvicon.png"></a> <a href="http://smartversion.com/download.htm">SmartVersion</a> </li>
  </ul>
</div>

<h4>Serialization</h4>
<div class="container">
  <ul class="list-inline">
    <li><a href="http://www.fstpackage.org/"><img src="images/fst.png"></a> <a href="https://github.com/fstpackage/fst/tree/master/src/ZSTD">FST</a> </li>
    <li><a href="http://www.blosc.org/"><img src="images/blosc.png"></a> <a href="https://www.blosc.org/posts/zstd-has-just-landed-in-blosc/">Blosc</a> </li>
    <li><a href="http://bcolz.blosc.org/en/latest/"><img src="images/bcolz.png"></a> <a href="https://github.com/Blosc/bcolz/tree/master/c-blosc/internal-complibs/zstd-1.1.2">bcolz</a> </li>
    <li><a href="https://arrow.apache.org/"><img src="images/apache-arrow.png"></a> <a href="https://arrow.apache.org/blog/2020/04/21/0.17.0-release/">Apache Arrow</a> </li>
    <li><a href="https://pypi.python.org/pypi/mrcz"><img src="images/mrc.png"></a> <a href="https://github.com/em-MRCZ/c-mrcz">mrcz</a> </li>
    <li><a href="http://www.well.ox.ac.uk/~gav/bgen_format/bgen_format.html"><img src="images/oxford.png"></a> <a href="http://www.well.ox.ac.uk/~gav/bgen_format/bgen_format.html">bgen</a> </li>
    <li><a href="https://developer.mozilla.org/en-US/docs/Mozilla/Gecko"><img src="images/gecko.png"></a> <a href="https://bug635044.bugzilla.mozilla.org/show_bug.cgi?id=1316183">Gecko</a> </li>
    <li><a href="https://support.hdfgroup.org/HDF5"><img src="images/hdf.png"></a> <a href="https://github.com/aparamon/HDF5Plugin-Zstandard">HDF5</a> </li>
    <li><a href="https://github.com/Sereal/Sereal"><img src="images/sereal.png"></a> <a href="https://github.com/Sereal/Sereal/tree/master/Perl/shared/zstd">Sereal</a> </li>
    <li><a href="https://www.cog-genomics.org/plink/2.0/"><img src="images/hulon.png"></a> <a href="https://www.cog-genomics.org/plink/2.0/">PLink2</a> </li>
    <li><a href="http://kirill-kryukov.com/study/naf/"><img src="images/naf.png"></a> <a href="http://kirill-kryukov.com/study/naf/">NAF</a> </li>
  </ul>
</div>

<h4>Network</h4>
<div class="container">
  <ul class="list-inline">
    <li><a href="https://code.facebook.com/projects/1410559149202582/fbthrift/"><img src="images/thrift.png"></a> <a href="https://github.com/facebook/fbthrift/commit/ec42813f0ced737617d4614900ef3a96c1f3d17f">fbthrift</a> </li>
    <li><a href="https://github.com/facebookincubator/fizz"><img src="images/fizz.png"></a> <a href="https://github.com/facebookincubator/fizz/blob/master/fizz/protocol/ZstdCertificateCompressor.h">Fizz</a> </li>
    <li><a href="https://code.facebook.com/projects/676603015770415/proxygen/"><img src="images/proxygen.png"></a> <a href="https://github.com/facebook/proxygen/blob/master/proxygen/lib/utils/ZstdStreamDecompressor.h">proxygen</a> </li>
    <li><a href="https://code.facebook.com/projects/470946523057396/mcrouter/"><img src="images/mcrouter.png"></a> <a href="https://github.com/facebook/mcrouter/blob/master/mcrouter/lib/ZstdCompressionCodec.h">mcrouter</a> </li>
    <li><a href="https://rspamd.com/"><img src="images/rspamd.png"></a> <a href="https://rspamd.com/announce/2016/11/21/rspamd-1.4.0.html">Rspamd</a> </li>
    <li><a href="https://www.torproject.org/"><img src="images/tor.png"></a> <a href="https://blog.torproject.org/blog/tor-0312-alpha-out-notes-about-0311-alpha">Tor</a> </li>
    <li><a href="https://neomutt.org/"><img src="images/neomutt.png"></a> <a href="https://neomutt.org/feature/hccompress">NeoMutt</a> </li>
    <li><a href="https://download.samba.org/pub/rsync/NEWS#3.2.0"><img src="images/rsync.png"></a> <a href="https://download.samba.org/pub/rsync/NEWS#3.2.0">Rsync</a> </li>
  </ul>
</div>

<h4>Hardware</h4>
<div class="container">
  <ul class="list-inline">
    <li><a href="https://github.com/Xilinx/Vitis_Libraries/blob/master/data_compression/README.rst"><img src="images/xilinx.png"></a> <a href="https://github.com/Xilinx/Vitis_Libraries/tree/master/data_compression/L2/tests/zstd_quadcore_compress">Xilinx</a> </li>
    <li><a href="https://inaccel.com/"><img src="images/inaccel.png"></a> <a href="https://inaccel.com/">Inaccel</a> </li>
    <li><a href="https://developer.ibm.com/storage/2018/11/26/ts7700-enhanced-compression/"><img src="images/ibm.png"></a> <a href="https://developer.ibm.com/storage/2018/11/26/ts7700-enhanced-compression/">IBM TS7700</a> </li>
  </ul>
</div>

<h4>Games &amp; Creation</h4>
<div class="container">
  <ul class="list-inline">
    <li><a href="https://leagueoflegends.com/en"><img src="images/lol.png  "></a> <a href="https://technology.riotgames.com/news/supercharging-data-delivery-new-league-patcher">League of Legends</a> </li>
    <li><a href="https://www.blender.org/"><img src="images/blender.png"></a> <a href="https://wiki.blender.org/wiki/Reference/Release_Notes/3.0/Core">Blender</a> </li>
    <li><a href="https://godotengine.org/"><img src="images/godot.png"></a> <a href="https://github.com/godotengine/godot/tree/master/thirdparty/zstd">Godot</a> </li>
    <li><a href="http://github.khronos.org/KTX-Specification/"><img src="images/ktx.png"></a> <a href="http://github.khronos.org/KTX-Specification/">Khronos's KTX</a> </li>
    <li><a href="https://github.com/Siv3D/OpenSiv3D"><img src="images/siv3d.png"></a> <a href="https://github.com/Siv3D/OpenSiv3D/tree/master/Siv3D/Source/ThirdParty/zstd">OpenSiv3D</a> </li>
    <li><a href="http://www.esenthel.com/"><img src="images/esenthel.png"></a> <a href="http://www.esenthel.com/?id=feature_list">Esenthel</a> </li>
    <li><a href="http://masseffect.bioware.com/"><img src="images/andromeda.png"></a> <a href="https://youtu.be/u3zSdu2mp9A?t=6m33s">Mass Effect:Andromeda</a> </li>
  </ul>
</div>

<h4>Misc</h4>
<div class="container">
  <ul class="list-inline">
    <li><a href="https://www.ubuntu.com/"><img src="images/ubuntu.png"></a> <a href="https://www.omgubuntu.co.uk/2018/03/faster-ubuntu-installs-zstd-compression">Ubuntu</a> </li>
    <li><a href="https://getfedora.org/"><img src="images/fedora.png"></a> <a href="https://fedoraproject.org/wiki/Changes/Switch_RPMs_to_zstd_compression">Fedora</a> </li>
    <li><a href="https://www.archlinux.org/"><img src="images/arch.png"></a> <a href="https://www.archlinux.org/news/now-using-zstandard-instead-of-xz-for-package-compression/">ArchLinux</a> </li>
    <li><a href="https://rpm.org/"><img src="images/rpm.png"></a> <a href="https://rpm.org/wiki/Releases/4.14.0">RPM</a> </li>
    <li><a href="https://wiki.freebsd.org/pkgng"><img src="images/freebsd.png"></a> <a href="https://svnweb.freebsd.org/ports?view=revision&amp;revision=512256">PKG</a> </li>
    <li><a href="https://conda.io/"><img src="images/conda.png"></a> <a href="https://www.anaconda.com/how-we-made-conda-faster-4-7/">Conda</a> </li>
    <li><a href="https://gcc.gnu.org/"><img src="images/gcc.png"></a> <a href="https://www.phoronix.com/scan.php?page=news_item&amp;px=GCC-10-Gets-Zstd-LTO-Byte-Comp">GCC</a> </li>
    <li><a href="https://code.facebook.com/projects/527543867323997/folly/"><img src="images/folly.png"></a> <a href="https://github.com/facebook/folly/blob/master/folly/compression/Compression.h#L83">folly</a> </li>
    <li><a href="https://cmake.org/"><img src="images/cmake.png"></a> <a href="https://cmake.org/cmake/help/v3.15/release/3.15.html">cmake</a> </li>
    <li><a href="https://docs.taskcluster.net/"><img src="images/taskc2.png"></a> <a href="https://github.com/taskcluster/taskcluster-worker/pull/114">TaskCluster</a></li>
    <li><a href="http://www.ultimatepp.org/"><img src="images/uppframe.png"></a> <a href="http://www.ultimatepp.org/www$uppweb$Roadmap$en-us.html">U++</a> </li>
    <li><a href="http://ceph.com/"><img src="images/ceph.png"></a> <a href="https://github.com/ceph/ceph/tree/master/src/compressor/zstd">Ceph</a></li>
    <li><a href="https://github.com/MarekKowalski/LiveScan3D"><img src="images/blank.png"></a> <a href="https://github.com/MarekKowalski/LiveScan3D/pull/14">LiveScan3D</a> </li>
    <li><a href="https://kiwix.org/"><img src="images/kiwix.png"></a> <a href="https://www.kiwix.org/en/zim-tools-3-0-0-is-out/">Kiwix</a> </li>
  </ul>
</div>

<p><br></p>
<hr>
<div classname="footerSection">
  <h7>Legal</h7>
  <a href="https://opensource.facebook.com/legal/privacy/" target="_blank" rel="noreferrer noopener">
    Privacy
  </a>
  <a href="https://opensource.facebook.com/legal/terms/" target="_blank" rel="noreferrer noopener">
    Terms
  </a>
  Copyright © Meta Platforms, Inc.
</div>


</div>

</body></html>
