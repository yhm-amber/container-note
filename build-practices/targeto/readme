: :: this tool is a builder :: :
: :: to take files on node into a oci :: :
: :: and run the oci will untar files into target dir :: :


📜


: name
: targeto - Tar Gettor as OCI



: version
: see src.sh




: usage

targeto take foo-initor /opt/sdk0:/opt/sdk1 $PWD/app:/opt/app

: then you get an oci image named `foo-initor`
: there is /opt/sdk0 in image same as /opt/sdk0 on your node



: or

targeto disc /opt/sdk0:sdk-initor:/opt/sdk1 $PWD/app:app-initor:/opt/app

: same as

targeto take sdk-initor /opt/sdk0:/opt/sdk1
targeto take app-initor $PWD/app:/opt/app




: 🔩 and then you can use the `foo-initor` as you like .
: 🦝 such as `init container` in Kubernetes pods .




: about speed



: you can use like

COMP_LEVEL=16 targeto disc /opt/sdk0:sdk-initor:/opt/sdk1 $PWD/app:app-initor:/opt/app

: to set a number about zstd compress .

: if number is smaller: then init will be faster .
: if number is bigger: then init will be smaller .





: more see src.sh






: :::: :::: :: :::: :::: :

: 简单讲讲

: 我在欢迎里写的安装是会让你用容器外的环境运行它
: 运行它就是帮你把你需要打包的东西打包
: 它 (targeto) 是一个 Bash 脚本（ dash 或许也可以但我没测）

: 脚本运行需要 zstd 命令
: 如果你没有这个命令的话欢迎界面有行能帮你安装它——原理是复用 targeto 镜像中的 zstd 命令

: 给你打包好压缩包并构建镜像后
: 镜像的默认（不传参）运行效果就是把相关文件解包到它原来的目录（按照绝对路径）
: 如果你要用它当作 init container 的话你应该需要把这个目录挂给一个临时卷
: 这样它就会向这个临时卷添加该添加的东西

: 你还可以举一反三
: 在任何可运行 OCI 容器的地方去用
: 比如 Eru2 、 nomad 、或者（目前）众所周知的 Kubernetes 或者只是让这个镜像帮你初始化好一个 docker volume 。

: 用变量 COMP_LEVEL 指定 zstd 的压缩系数
: 数字越小的话到时候的 init 耗时越少
: 数字越大的话到时候的 init 镜像体积越小
: 数字默认好像是 13 来着吧？……





🦾🦾🦾🦾🦾🦾🦾🦾🦾🦾🦾🦾🦾🦾🦾
🦝🦝🦝🦝🦝🦝🦝🦝🦝🦝🦝🦝🦝🦝🦝






